{"ast":null,"code":"var _jsxFileName = \"/Users/jamesgore/Coding/personal-projects/in-progress/global-covid-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./styles/App.css\";\nimport { MenuItem, FormControl, Select } from \"@material-ui/core\";\nimport Infobox from \"./common/data/Infobox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('Worldwide');\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async event => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Global Covid-19 Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: \"app__dropdown\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          variant: \"outlined\",\n          value: country,\n          onChange: onCountryChange,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Worldwide\",\n            children: \"Worldwide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: country.value,\n            children: country.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__stats\",\n      children: [/*#__PURE__*/_jsxDEV(Infobox, {\n        title: \"Coronavirus Cases\",\n        total: 2000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Infobox, {\n        title: \"Recovered\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Infobox, {\n        title: \"Deaths\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JM3kzsPvr+UAsCxgIfhFP+YyTno=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jamesgore/Coding/personal-projects/in-progress/global-covid-tracker/src/App.js"],"names":["React","useEffect","useState","MenuItem","FormControl","Select","Infobox","App","countries","setCountries","country","setCountry","getCountriesData","fetch","then","response","json","data","map","name","value","countryInfo","iso2","onCountryChange","event","countryCode","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,kBAAP;AAEA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,MAAhC,QAA8C,mBAA9C;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,WAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,gBAAgB,GAAG,YAAY;AACnC,YAAMC,KAAK,CAAC,0CAAD,CAAL,CACHC,IADG,CACGC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADhB,EAEHF,IAFG,CAEGG,IAAD,IAAU;AACd,cAAMT,SAAS,GAAGS,IAAI,CAACC,GAAL,CAAUR,OAAD,KAAc;AACvCS,UAAAA,IAAI,EAAET,OAAO,CAACA,OADyB;AAEvCU,UAAAA,KAAK,EAAEV,OAAO,CAACW,WAAR,CAAoBC;AAFY,SAAd,CAAT,CAAlB;AAIAb,QAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,OARG,CAAN;AASD,KAVD;;AAWAI,IAAAA,gBAAgB;AACjB,GAbQ,EAaN,EAbM,CAAT;;AAeA,QAAMW,eAAe,GAAG,MAAOC,KAAP,IAAiB;AACvC,UAAMC,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAaN,KAAjC;AACAT,IAAAA,UAAU,CAACc,WAAD,CAAV;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAC,eAAvB;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,UAAhB;AAA2B,UAAA,KAAK,EAAEf,OAAlC;AAA2C,UAAA,QAAQ,EAAEa,eAArD;AAAA,kCACE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGf,SAAS,CAACU,GAAV,CAAeR,OAAD,iBACb,QAAC,QAAD;AAAU,YAAA,KAAK,EAAEA,OAAO,CAACU,KAAzB;AAAA,sBAAiCV,OAAO,CAACS;AAAzC;AAAA;AAAA;AAAA;AAAA,kBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACQ,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,mBAAf;AAAmC,QAAA,KAAK,EAAE;AAA1C;AAAA;AAAA;AAAA;AAAA,cADR,eAGQ,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAHR,eAKQ,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cALR;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAjDQZ,G;;KAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./styles/App.css\";\n\nimport { MenuItem, FormControl, Select } from \"@material-ui/core\";\nimport Infobox from \"./common/data/Infobox\"\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('Worldwide')\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }))\n          setCountries(countries)\n        })\n    }\n    getCountriesData()\n  }, [])\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value\n    setCountry(countryCode)\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__header\">\n        <h1>Global Covid-19 Tracker</h1>\n        <FormControl className=\"app__dropdown\">\n          <Select variant=\"outlined\" value={country} onChange={onCountryChange}>\n            <MenuItem value='Worldwide'>Worldwide</MenuItem>\n            {countries.map((country) => (\n              <MenuItem value={country.value}>{country.name}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n\n\n      <div className='app__stats'>\n              <Infobox title=\"Coronavirus Cases\" total={2000}/>\n\n              <Infobox title=\"Recovered\" />\n\n              <Infobox title=\"Deaths\" />\n      </div>\n\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}